import streamlit as st

st.set_page_config(page_title="Chat de Regras ‚Äì Auditoria, Moskit e 360", layout="centered")
st.title("ü§ñ Chat Inteligente ‚Äì Regras, Moskit e Solu√ß√£o 360")

st.write("Digite sua d√∫vida sobre modelos de gest√£o, parcelamento, Moskit ou 360:")

pergunta = st.text_input("Sua d√∫vida:")

def responder(pergunta):
    pergunta = pergunta.lower()

    # BLOCO: REGRAS DE AUDITORIA
    if "mensal" in pergunta:
        return (
            "üîπ **Modelo Mensal**:\n"
            "- Permitido para: Combo SST, Aprendizagem, Curso T√©cnico (12 a 24 parcelas)\n"
            "- Gin√°stica Laboral e M√£o de Obra Especializada: somente 12 parcelas\n"
            "- Forma de pagamento: somente Boleto Banc√°rio\n"
            "- ‚ùå N√£o permitido para: Loca√ß√£o de Espa√ßos\n"
            "- ‚ö†Ô∏è Exce√ß√£o: M√£o de Obra Especializada deve ter medi√ß√£o mensal."
        )
    elif "ap√≥s execu√ß√£o" in pergunta:
        return (
            "üîπ **Modelo Ap√≥s Execu√ß√£o**:\n"
            "- N√£o permite parcelamento\n"
            "- Aceita apenas Boleto Banc√°rio\n"
            "- N√£o pode ser usado com Loca√ß√£o de Espa√ßos"
        )
    elif "ap√≥s assinatura" in pergunta:
        return (
            "üîπ **Modelo Ap√≥s Assinatura**:\n"
            "- At√© 10 parcelas (at√© 12 se for M√£o de Obra Especializada com medi√ß√£o mensal)\n"
            "- ‚ùå N√£o aceita Dep√≥sito em Conta"
        )
    elif "ap√≥s pagamento" in pergunta:
        return (
            "üîπ **Modelo Ap√≥s Pagamento**:\n"
            "- Usado para: Loca√ß√£o de Espa√ßos e clientes inadimplentes\n"
            "- M√°ximo de 2 parcelas\n"
            "- ‚ùå N√£o pode usar Dep√≥sito em Conta"
        )
    elif "aprendizagem gratuita" in pergunta:
        return (
            "üîπ **Aprendizagem Gratuita**:\n"
            "- Deve usar: Ap√≥s Assinatura + Dep√≥sito em Conta\n"
            "- ‚ùå N√£o pode usar boleto, cart√£o ou modelos como Mensal ou Ap√≥s Execu√ß√£o"
        )
    elif "faturamento sob demanda" in pergunta or "senai/al" in pergunta:
        return (
            "üîπ **SENAI/AL + Faturamento Sob Demanda**:\n"
            "- ‚ùå N√£o √© permitido\n"
            "- ‚úÖ Exceto para Metrologia com modelo Ap√≥s Execu√ß√£o"
        )
    elif "sebrae" in pergunta and "modelo" in pergunta:
        return (
            "üîπ **Contratos Sebrae**:\n"
            "- Devem usar: Ap√≥s Assinatura\n"
            "- ‚ùå Qualquer outro modelo est√° incorreto"
        )
    elif "sem produto" in pergunta:
        return "üî¥ Erro: Proposta com 'Sem Produto' deve ser corrigida e incluir um produto v√°lido."
    elif "fonte pagadora" in pergunta or any(x in pergunta for x in ["abdi", "sebrae al", "senai dr/df", "b+p"]):
        return (
            "üîπ **Fontes Pagadoras: Senai DR/DF, ABDI, SEBRAE-AL, B+P**\n"
            "- ‚úÖ Devem usar: Modelo Ap√≥s Execu√ß√£o + Dep√≥sito em Conta\n"
            "- ‚ùå N√£o pode usar boleto, cart√£o ou outro modelo"
        )
    elif "loca√ß√£o de espa√ßos" in pergunta:
        return (
            "üîπ **Loca√ß√£o de Espa√ßos**:\n"
            "- ‚úÖ Deve usar: Ap√≥s Pagamento\n"
            "- ‚ùå N√£o pode usar: Mensal, Ap√≥s Execu√ß√£o ou Ap√≥s Assinatura"
        )

    # BLOCO: MOSKIT
    elif "como cadastrar empresa" in pergunta:
        return (
            "üîπ Cadastro de empresa no Moskit:\n"
            "- S√≥ pode ser feito ap√≥s criar um neg√≥cio\n"
            "- √â necess√°rio: CNPJ v√°lido, contato vinculado, e n√∫mero de funcion√°rios > 0\n"
            "- A empresa precisa ser ativada pelo Observat√≥rio para gerar proposta"
        )
    elif "funil do moskit" in pergunta:
        return (
            "üîπ **Funil do Moskit**:\n"
            "1. Base Geral (MQL)\n"
            "2. Cliente Potencial (SAL)\n"
            "3. Lead Qualificado (SQL)\n"
            "4. Oportunidade (OPP)\n"
            "5. Reuni√£o\n"
            "6. Elaborar Proposta (gera link para o 360)"
        )
    elif "como abrir neg√≥cio" in pergunta:
        return (
            "üîπ Como abrir um neg√≥cio no Moskit:\n"
            "- V√° em 'Neg√≥cios' > 'Novo Neg√≥cio'\n"
            "- Preencha: Nome do neg√≥cio, Fase, Respons√°vel, Empresa, Contato e Produto\n"
            "- Salve e avance conforme as etapas do funil"
        )
    elif "id da empresa" in pergunta:
        return (
            "üîπ Sobre o ID da empresa/contato no Moskit:\n"
            "- Para o link funcionar com o 360, o contato precisa estar vinculado corretamente √† empresa\n"
            "- O ID da empresa deve aparecer igual no Moskit e na proposta"
        )

    # BLOCO: 360
    elif "360" in pergunta and "proposta" in pergunta:
        return (
            "üîπ Etapas para emitir proposta na Solu√ß√£o 360:\n"
            "- Preencha a aba 'Informa√ß√µes': Tipo de proposta, Forma de Pagamento, Template, Tabela de Pre√ßo\n"
            "- Depois preencha: Contato, Produto, Parcelas\n"
            "- Ap√≥s isso, a proposta poder√° ser enviada para aprova√ß√£o da ger√™ncia"
        )
    elif "diagn√≥stico" in pergunta:
        return (
            "üîπ Etapa Diagn√≥stico no 360:\n"
            "- Usada quando o produto precisa de altera√ß√£o (customiza√ß√£o, precifica√ß√£o, carga hor√°ria)\n"
            "- O consultor deve mover o card para Diagn√≥stico e informar o que precisa ser ajustado\n"
            "- O setor de Neg√≥cios analisar√° e seguir√° com a An√°lise de Novo Produto, se necess√°rio"
        )
    elif "combo" in pergunta or "s+ pgr" in pergunta:
        return (
            "üîπ Regras do COMBO SST no 360:\n"
            "- Deve conter: PGR, PCMSO, E-social, S+, Laudos etc.\n"
            "- Modelo: Mensal\n"
            "- Prazo: 24 meses\n"
            "- ‚ö†Ô∏è Se faltar o E-social, n√£o √© mais Combo, √© avulsa e segue outras regras"
        )
    elif "unidade executora" in pergunta:
        return (
            "üîπ Unidade Executora no 360:\n"
            "- Quando quem vai executar √© diferente de quem criou o neg√≥cio, informe na aba 'Unidade Executora'\n"
            "- Isso evita erros e garante que o sistema direcione corretamente"
        )
    elif "n√£o aparece a aba de produto" in pergunta:
        return (
            "üîπ Aba de produto n√£o aparece no 360:\n"
            "- Verifique se voc√™ preencheu: Forma de Pagamento, Tipo de Proposta, Template e Tabela de Pre√ßo\n"
            "- Sem essas informa√ß√µes, a aba de produto fica oculta"
        )

    return "‚ùå Ainda n√£o sei responder essa pergunta. Fale com o Mateus!"

# Exibe a resposta
if pergunta:
    st.success(responder(pergunta))
